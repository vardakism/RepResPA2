str(mydatas2)
with(mydatas2,PROPDMGEXP[is.na(PROPDMGEXP)]<-0)
str(mydatas2)
sum(mydatas2$PROPDMGEXP[is.na(PROPDMGEXP)])
sum(mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)])
sum(mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP),])
sum(mydatas2$PROPDMGEXP[,is.na(mydatas2$PROPDMGEXP)])
mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]
sum(as.numeric(mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]))
sum(as.numeric(mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)])))
cc<-as.numeric(mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]))
cc<-as.numeric(mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)])
cc<-as.numeric(cc)
cc<-mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]
cc<-0
mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]<-0
cc<-mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]
mydatas2<-subset(mydatas1,BGNYEAR>=1994)
# First change the NAs
mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]<-0
mydatas2$CROPDMGEXP[is.na(mydatas2$CROPDMGEXP)]<-0
# Then + and - symbols
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "+" | mydatas2$PROPDMGEXP == "-"]<-0
mydatas2$PROPDMGEXP[mydatas2$CROPDMGEXP == "+" | mydatas2$CROPDMGEXP == "-"]<-0
# And now transform all letters to numeric values
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "h"]<-2
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "k"]<-3
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "m"]<-6
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "b"]<-9
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "h"]<-2
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "k"]<-3
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "m"]<-6
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "b"]<-9
# Transform them to numeric variables
mydatas2$PROPDMGEXP<-as.numeric(mydatas2$PROPDMGEXP)
mydatas2$CROPDMGEXP<-as.numeric(mydatas2$CROPDMGEXP)
mydatas2$PROPCOST<-mydatas2$PROPDMG*(10^mydatas2$PROPDMGEXP)
mydatas2$CROPCOST<-mydatas2$CROPDMG*(10^mydatas2$CROPDMGEXP)
mydatas2<-subset(mydatas1,BGNYEAR>=1994)
mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]<-0
mydatas2$CROPDMGEXP[is.na(mydatas2$CROPDMGEXP)]<-0
unique(tolower(mydatas2$PROPDMGEXP))
unique(tolower(mydatas2$CROPDMGEXP))
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "+" | mydatas2$PROPDMGEXP == "-"]<-0
mydatas2$PROPDMGEXP[mydatas2$CROPDMGEXP == "+" | mydatas2$CROPDMGEXP == "-"]<-0
unique(tolower(mydatas2$PROPDMGEXP))
unique(tolower(mydatas2$CROPDMGEXP))
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "h"]<-2
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "k"]<-3
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "m"]<-6
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "b"]<-9
unique(tolower(mydatas2$PROPDMGEXP))
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "h"]<-2
unique(tolower(mydatas2$PROPDMGEXP))
unique(mydatas2$PROPDMGEXP)
mydatas2<-subset(mydatas1,BGNYEAR>=1994)
# First change the NAs
mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]<-0
mydatas2$CROPDMGEXP[is.na(mydatas2$CROPDMGEXP)]<-0
# Then + and - symbols
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "+" | mydatas2$PROPDMGEXP == "-"]<-0
mydatas2$PROPDMGEXP[mydatas2$CROPDMGEXP == "+" | mydatas2$CROPDMGEXP == "-"]<-0
# And now transform all letters to numeric values
mydatas2$PROPDMGEXP<-tolower(mydatas2$PROPDMGEXP)
mydatas2$CROPDMGEXP<-tolower(mydatas2$CROPDMGEXP)
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "h"]<-2
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "k"]<-3
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "m"]<-6
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "b"]<-9
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "h"]<-2
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "k"]<-3
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "m"]<-6
mydatas2$CROPDMGEXP[mydatas2$PROPDMGEXP == "b"]<-9
# Transform them to numeric variables
mydatas2$PROPDMGEXP<-as.numeric(mydatas2$PROPDMGEXP)
mydatas2$CROPDMGEXP<-as.numeric(mydatas2$CROPDMGEXP)
mydatas2$PROPCOST<-mydatas2$PROPDMG*(10^mydatas2$PROPDMGEXP)
mydatas2$CROPCOST<-mydatas2$CROPDMG*(10^mydatas2$CROPDMGEXP)
mydatas2<-subset(mydatas1,BGNYEAR>=1994)
# First change the NAs
mydatas2$PROPDMGEXP[is.na(mydatas2$PROPDMGEXP)]<-0
mydatas2$CROPDMGEXP[is.na(mydatas2$CROPDMGEXP)]<-0
# Then + and - symbols
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "+" | mydatas2$PROPDMGEXP == "-"]<-0
mydatas2$PROPDMGEXP[mydatas2$CROPDMGEXP == "+" | mydatas2$CROPDMGEXP == "-"]<-0
# And now transform all letters to numeric values
mydatas2$PROPDMGEXP<-tolower(mydatas2$PROPDMGEXP)
mydatas2$CROPDMGEXP<-tolower(mydatas2$CROPDMGEXP)
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "h"]<-2
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "k"]<-3
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "m"]<-6
mydatas2$PROPDMGEXP[mydatas2$PROPDMGEXP == "b"]<-9
mydatas2$CROPDMGEXP[mydatas2$CROPDMGEXP == "h"]<-2
mydatas2$CROPDMGEXP[mydatas2$CROPDMGEXP == "k"]<-3
mydatas2$CROPDMGEXP[mydatas2$CROPDMGEXP == "m"]<-6
mydatas2$CROPDMGEXP[mydatas2$CROPDMGEXP == "b"]<-9
# Transform them to numeric variables
mydatas2$PROPDMGEXP<-as.numeric(mydatas2$PROPDMGEXP)
mydatas2$CROPDMGEXP<-as.numeric(mydatas2$CROPDMGEXP)
mydatas2$PROPCOST<-mydatas2$PROPDMG*(10^mydatas2$PROPDMGEXP)
mydatas2$CROPCOST<-mydatas2$CROPDMG*(10^mydatas2$CROPDMGEXP)
```
str(mydatas2)
summary(mydatas2)
length(unique(mydatas2$EVTYPE)))
length(unique(mydatas2$EVTYPE))
unique(mydatas2$EVTYPE)
length(unique(tolower(mydatas2$EVTYPE))
)
unique(tolower(mydatas2$EVTYPE))
EVTYPE<-mydatas2$EVTYPE
EVTYPE <- gsub('\\\\|&|/|(-\\s)|\\s+|;',' ',EVTYPE)
EVTYPE <- gsub('\\s+',' ',EVTYPE)
EVTYPE <- gsub('^\\s','',EVTYPE)
EVTYPE <- gsub('\\s$|-$|\\.$','',EVTYPE)
unique(EVTYPE)
EVTYPE<-tolower(mydatas2$EVTYPE)
EVTYPE <- gsub('\\\\|&|/|(-\\s)|\\s+|;',' ',EVTYPE)
EVTYPE <- gsub('\\s+',' ',EVTYPE)
EVTYPE <- gsub('^\\s','',EVTYPE)
EVTYPE <- gsub('\\s$|-$|\\.$','',EVTYPE)
unique(EVTYPE)
sort(unique(EVTYPE))
EVTYPE <- gsub('flooding|fldg|fld|floodin','flood',EVTYPE)
EVTYPE <- gsub('tornados|torndao|tornadoes','tornado',EVTYPE)
EVTYPE <- gsub('tornado f.','tornado',EVTYPE)
EVTYPE <- gsub('(wintery|wintry)','winter',EVTYPE)
EVTYPE <- gsub('and','',EVTYPE)
EVTYPE <- gsub(' and$','',EVTYPE)
EVTYPE <- gsub('cstl','coastal',EVTYPE)
EVTYPE <- gsub('erosin','erosion',EVTYPE)
EVTYPE <- gsub(' \\(minor$','',EVTYPE)
EVTYPE <- gsub('\\s+|,',' ',EVTYPE)
EVTYPE <- gsub('(\\s|\\))$','',EVTYPE)
sort(unique(EVTYPE))
EVTYPE <- gsub('(heavy rains)|(heavy rainfall)','heavy rain',EVTYPE)
EVTYPE <- gsub('wnd','wind',EVTYPE)
EVTYPE <- gsub('thunderstorms','thunderstorm',EVTYPE)
EVTYPE <- gsub('thunderstorm w inds','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('thunderstormw winds','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('thunderstormwinds','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('(thunderstorm wnd)|(thunderstorm wins)','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('(thunderstorm damage)|(thunderstorm damage to)','thunderstorm',EVTYPE)
EVTYPE <- gsub('thunderstorm wind.+','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('thunderstormw.+|thunderstormw','thunderstorm',EVTYPE)
EVTYPE <- gsub('wild fire','wildfire',EVTYPE)
sort(unique(EVTYPE))
EVTYPE <- gsub('flooding|fldg|fld|floodin|floods','flood',EVTYPE)
EVTYPE <- gsub('flood flood','flood',EVTYPE)
EVTYPE <- gsub('flood flash','flash flood',EVTYPE)
EVTYPE <- gsub('hvy','heavy',EVTYPE)
EVTYPE <- gsub('(sml stream)|(small strm)','small stream',EVTYPE)
EVTYPE <- gsub('unseasonal|unseasonable','unseasonal',EVTYPE)
EVTYPE <- gsub('coastalstorm','coastal storm',EVTYPE)
EVTYPE <- gsub('erosin','erosion',EVTYPE)
sort(unique(EVTYPE))
# First try to tide up the symbols
EVTYPE<-tolower(mydatas2$EVTYPE)
EVTYPE <- gsub('\\\\|&|/|(-\\s)|\\s+|;',' ',EVTYPE)
EVTYPE <- gsub('\\s+',' ',EVTYPE)
EVTYPE <- gsub('^\\s','',EVTYPE)
EVTYPE <- gsub('\\s$|-$|\\.$','',EVTYPE)
# Some frequent appearing words
EVTYPE <- gsub('flooding|fldg|fld|floodin|floods','flood',EVTYPE)
EVTYPE <- gsub('flood flood','flood',EVTYPE)
EVTYPE <- gsub('flood flash','flash flood',EVTYPE)
EVTYPE <- gsub('tornados|torndao|tornadoes','tornado',EVTYPE)
EVTYPE <- gsub('tornado f.','tornado',EVTYPE)
EVTYPE <- gsub('(wintery|wintry)','winter',EVTYPE)
EVTYPE <- gsub('and','',EVTYPE)
EVTYPE <- gsub(' and$','',EVTYPE)
EVTYPE <- gsub(' \\(minor$','',EVTYPE)
EVTYPE <- gsub('\\s+|,',' ',EVTYPE)
EVTYPE <- gsub('(\\s|\\))$','',EVTYPE)
EVTYPE <- gsub('(heavy rains)|(heavy rainfall)','heavy rain',EVTYPE)
EVTYPE <- gsub('cstl','coastal',EVTYPE)
EVTYPE <- gsub('wnd','wind',EVTYPE)
EVTYPE <- gsub('winds$','wind',EVTYPE)
EVTYPE <- gsub('thunderstorms','thunderstorm',EVTYPE)
EVTYPE <- gsub('tstm wind|tstmw|tstm winds','tsunami winds',EVTYPE)
EVTYPE <- gsub('thunderstrom|thunerstorm|thundertsorm|
thundertorm|thundestorm|thuderstorm','thunderstorm',EVTYPE)
EVTYPE <- gsub('tunderstorm|thunderestorm|thundeerstorm|
thunderstorms|thundertorm','thunderstorm',EVTYPE)
EVTYPE <- gsub('thunderstorms','thunderstorm',EVTYPE)
EVTYPE <- gsub('thunderstorm w inds','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('thunderstormw winds','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('thunderstormwinds','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('(thunderstorm wnd)|(thunderstorm wins)','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('(thunderstorm damage)|(thunderstorm damage to)','thunderstorm',EVTYPE)
EVTYPE <- gsub('thunderstorm wind.+','thunderstorm wind',EVTYPE)
EVTYPE <- gsub('thunderstormw.+|thunderstormw','thunderstorm',EVTYPE)
EVTYPE <- gsub('wild fire','wildfire',EVTYPE)
EVTYPE <- gsub('(wintery|wintry)','winter',EVTYPE)
EVTYPE <- gsub('hvy','heavy',EVTYPE)
EVTYPE <- gsub('(sml stream)|(small strm)','small stream',EVTYPE)
EVTYPE <- gsub('unseasonal|unseasonable','unseasonal',EVTYPE)
EVTYPE <- gsub('coastalstorm','coastal storm',EVTYPE)
EVTYPE <- gsub('erosin','erosion',EVTYPE)
EVTYPE <- gsub('wild forest fire','wildfire',EVTYPE)
mydatas2$EVTYPE<-EVTYPE
unique(mydatas2$EVTYPE<-EVTYPE)
library(plyr)
str(mydatas2)
final<-ddply(mydatas2,.(EVTYPE), summarise,
fatal = sum(FATALITIES),
injuries = sum(INJURIES),
propcosts = sum(PROPCOST),
agricosts = sum(CROPCOST)
)
finalHC10<-head(final[order(-final$fatal),],10)
View(final)
deaths<-ggplot(finalHC10,aes(y=fatal,x=EVTYPE))+geom_bar(stat="identity")+
xlab("Weather Event")+
ylab("Number of People")
deaths
deaths<-ggplot(finalHC10,aes(y=fatal,x=as.factor(EVTYPE))+geom_bar(stat="identity")+
xlab("Weather Event")+
ylab("Number of People")
deaths<-ggplot(finalHC10,aes(y=fatal,x=as.factor(EVTYPE)))+geom_bar(stat="identity")+
xlab("Weather Event")+
ylab("Number of People")
deaths
finalHC10i<-head(final[order(-final$injuries),],10)
injurs<-ggplot(finalHC10,aes(y=injuries,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
xlab("Weather Event")+
ylab("Number of People")
injurs
library(grid)
library(gridExtra)
titleplot2 <- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.")
grid.arrange(deaths, plotStormQ1Fatal, injurs, ncol = 2, main = titleplot2)
titleplot2 <- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.")
grid.arrange(deaths,injurs, ncol = 2, main = titleplot2)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(deaths,injurs, ncol = 2, main = titleplot2)
multiplot(deaths,injurs, cols = 2, main = titleplot2)
multiplot(deaths,injurs,  main = titleplot2)
dev.off()
grid.arrange(deaths,injurs)
injurs
deaths
finalHC10f<-head(final[order(-final$fatal),],10)
deaths<-ggplot(finalHC10f,aes(y=fatal,x=as.factor(EVTYPE)))+geom_bar(stat="identity")+
xlab("Weather Event")+
ylab("Number of Fatalities")
deaths
injurs<-ggplot(finalHC10,aes(y=injuries,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
xlab("Weather Event")+
ylab("Number of People Injured")
injurs
View(finalHC10f)
View(finalHC10i)
View(finalHC10f)
finalHC10f<-head(final[order(-final$fatal),],10)
deaths<-ggplot(finalHC10f,aes(y=fatal,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Number of Fatalities")
finalHC10i<-head(final[order(-final$injuries),],10)
injurs<-ggplot(finalHC10,aes(y=injuries,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Number of People Injured")
grid.arrange(deaths,injurs)
titleplot2 <- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.", gp=gpar(fontsize=14))
grid.arrange(deaths,injurs)
titleplot2 <- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.", gp=gpar(fontsize=14))
grid.arrange(deaths,injurs)
titleplot2 <- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.", gp=gpar(fontsize=14))
grid.arrange(deaths,injurs)
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2)))
vplayout <- function(x,y)
viewport(layout.pos.row=x, layout.pos.col=y)
print(deaths,vp=vplayout(1,1))
print(injuries,vp=vplayout(1,2))
grid.newpage()
pushViewport(viewport(layout=grid.layout(1,2)))
vplayout <- function(x,y)
viewport(layout.pos.row=x, layout.pos.col=y)
print(deaths,vp=vplayout(1,1))
print(injurs,vp=vplayout(1,2))
titleplot2 <- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.", gp=gpar(fontsize=14))
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2)))
vplayout <- function(x,y)
viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2),heights = unit(c(1, 4, 4)))
vplayout <- function(x,y)
viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2),heights = unit(c(1, 4, 4), "null"))
vplayout <- function(x,y)
viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2),heights = unit(c(1, 4, 4), "null"))
vplayout <- function(x,y)
viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2),heights = unit(c(1, 4, 4), "null"))
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2),heights = unit(c(1, 4, 4)), "null"))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout=grid.layout(2,2,heights = unit(c(1, 4, 4)), "null")))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(1, 4), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
titleplot2 <- "Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S."
titleplot2 <- "Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S."
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(1, 4), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"),widths = unitc(.5, 6), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"),
widths=unit(c(.5, 6), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"),
widths=unit(c(2, 2), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"),
widths=unit(c(3, 3), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"),
widths=unit(c(6, 6), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"),
widths=unit(c(6, 6), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2), gp = gpar(fontsize = 20))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2, heights = unit(c(.5, 6), "null"),
widths=unit(c(10, 10), "null"))))
vplayout <- function(x,y) viewport(layout.pos.row=x, layout.pos.col=y)
grid.text(titleplot2, vp = vplayout(1,1:2), gp = gpar(fontsize = 20))
print(deaths,vp=vplayout(2,1))
print(injurs,vp=vplayout(2,2))
```
titleplot2<- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.", gp=gpar(fontsize=14))
grid.arrange(deaths, injurs,  ncol = 2, main = titleplot2)
titleplot2<- textGrob("Impact on Human Health of the Top 10 of Exteme Weather Events in the U.S.", gp=gpar(fontsize=18))
grid.arrange(deaths, injurs,  ncol = 2, main = titleplot2)
finalE10prop<-head(final[order(-(final$propcosts)/1e9),],10)
deaths<-ggplot(finalE10prop,aes(y=propcosts/1e9,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Damage in ($Billion)")
finalE10prop<-head(final[order(-(final$propcosts)/1e9),],10)
props<-ggplot(finalE10prop,aes(y=propcosts/1e9,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Damage in ($Billion)")
# Injuries
props
finalE10crop<-head(final[order(-(final$cropcosts)/1e9),],10)
props<-ggplot(finalE10crop,aes(y=cropcosts/1e9,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Damage in ($Billion)")+
ggtitle("Costs of Agricultural Damage")
# Crops
finalE10crop<-head(final[order(-(final$agricosts)/1e9),],10)
props<-ggplot(finalE10crop,aes(y=agricosts/1e9,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Damage in ($Billion)")+
ggtitle("Costs of Agricultural Damage")
# Crops
finalE10crop<-head(final[order(-(final$agricosts)/1e9),],10)
crops<-ggplot(finalE10crop,aes(y=agricosts/1e9,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Damage in ($Billion)")+
ggtitle("Costs of Agricultural Damage")
crops
# Properties
finalE10prop<-head(final[order(-(final$propcosts)/1e9),],10)
props<-ggplot(finalE10prop,aes(y=propcosts/1e9,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Damage in ($Billion)")+
ggtitle("Costs of Property Damage")
# Crops
finalE10crop<-head(final[order(-(final$agricosts)/1e9),],10)
crops<-ggplot(finalE10crop,aes(y=agricosts/1e9,x=as.factor(EVTYPE)))+
geom_bar(stat="identity")+
theme_bw()+
xlab("Weather Event")+
ylab("Damage in ($Billion)")+
ggtitle("Costs of Agricultural Damage")
titleplot3<- textGrob("Impact on U.S. Economy of the Top 10 of Exteme Weather Events",
gp=gpar(fontsize=18))
grid.arrange(props, injurs,  ncol = 2, main = titleplot3)
titleplot3<- textGrob("Impact on U.S. Economy of the Top 10 of Exteme Weather Events",
gp=gpar(fontsize=18))
grid.arrange(props, crops,  ncol = 2, main = titleplot3)
finalHC10f<-head(final[order(-final$fatal),],10)
knit("PA2_template.Rmd","PA2_template.md")
library(knitr)
knit("PA2_template.Rmd","PA2_template.md")
setwd("~/InternetCourses/specialization/5.Reproducible_Research/QA/peerassesment2/PA2")
knit("PA2_template.Rmd","PA2_template.md")
knit("PA2_template.Rmd","PA2_template.md")
library(knitr)
pandoc('PA2_template.md', format = 'latex')
markdownToHTML('PA2_template.md', 'PA2_template.html', options=c("use_xhml"))
system("pandoc -s PA2_template.html -o PA2_template.pdf")
getOption("rpubs.upload.method")
